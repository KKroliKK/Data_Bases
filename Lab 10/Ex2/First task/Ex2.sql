CREate table accounts(
	accountId int PRIMARY KEY,
	MainName varchar(30),
	credit int,
	currency varchar(30)
);
insert into accounts values (1 , 'Sergey' , 1000, 'wood'), (2 , 'Dinara' , 1000, 'wood'), (3 , 'Ilya' , 1000, 'wood') ;


CREATE OR REPLACE FUNCTION send_money(id_from integer, id_to integer, _value integer)
	returns void language plpgsql  as
	$$
	begin
		UPDATE accounts set credit = credit - _value where accountId = id_from;
		UPDATE accounts set credit = credit + _value where accountId = id_to;
		insert into Ledger(_from,_to,fee,amount,transactiondatetime)values (id_from, id_to, 0, _value, current_timestamp);
	end;
	$$;
BEGIN;
SAVEPOINT s1;
SELECT * FROM send_money(1, 3, 500);
SAVEPOINT s2;
SELECT * FROM send_money(2, 1, 700);
SAVEPOINT s3;
SELECT * FROM send_money(2, 3, 100);
ROLLBACK TO s1;


alter table accounts add column bankname varchar(30);
UPDATE accounts set bankname  = 'Sberbank' where accountId = 1;
UPDATE accounts set bankname  = 'Sberbank' where accountId = 3;
UPDATE accounts set bankname  = 'Tinkoff' where accountId = 2;

CREATE OR REPLACE FUNCTION send_money_with_fee(id_from integer, id_to integer, _value integer)
	returns varchar(30) as
	$$
	begin
	IF (select bankname from accounts where accountid = id_from) = (select bankname from accounts where accountid = id_to) then
		UPDATE accounts set credit = credit - _value where accountId = id_from;
		UPDATE accounts set credit = credit + _value where accountId = id_to;
		insert into Ledger(_from,_to,fee,amount,transactiondatetime)values (id_from, id_to, 0, _value, current_timestamp);
		return 'without fee';
	end if;
	if (select bankname from accounts where accountid = id_from) <> (select bankname from accounts where accountid = id_to) then
		UPDATE accounts set credit = credit - _value - 30 where accountId = id_from;
		UPDATE accounts set credit = credit + _value where accountId = id_to;
		insert into Ledger(_from,_to,fee,amount,transactiondatetime)values (id_from, id_to, 30, _value, current_timestamp);
		return 'with fee';
	end if;
	end;
	$$  language plpgsql;
	
	
select * from send_money_with_fee(3, 1, 500);
select * from accounts;

CREATE TABLE Ledger(
  id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  _from integer REFERENCES accounts(accountId),
  _to integer REFERENCES accounts(accountId),
  Fee integer,
  Amount integer,
  TransactionDateTime date
);
select * from ledger
commit;

-- EX2 

CREATE TABLE account(username varchar(30) PRIMARY KEY,fullname varchar(30),balance int, Group_id int);

insert into  account values('jones', 'Alice Jones', 82, 1),('bitdiddl', 'Ben Bitdiddle', 65, 1 ),('mike', 'Michael Dole', 73, 2 ),('alyssa', 'Alyssa P. Hacker', 79, 3 ),('bbrown', 'Bob Brown', 100, 3 );
	select * from account;


